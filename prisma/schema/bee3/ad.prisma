enum AdTiers {
    Free
    Pro
    Expert
}

model Category {
    id               String     @id
    path             String     @unique
    parentCategory   Category?  @relation("CategoryToCategory", fields: [parentCategoryId], references: [path], onDelete: NoAction, onUpdate: NoAction)
    parentCategoryId String?
    productCategory  Category[] @relation("CategoryToCategory")

    description String? @db.Text

    depth Int
    Ads   Ad[]

    attributes CategoryAttribute[]
}

enum AD_STATUS {
    REJECTED
    PENDING
    ACCEPTED
}

model Ad {
    id              String           @id
    userId          String?
    createdAt       DateTime         @default(now())
    updatedAt       DateTime         @updatedAt
    user            User?            @relation(fields: [userId], references: [id], onDelete: Cascade)
    favoritedBy     User[]           @relation("favoriteAds")
    category        Category?        @relation(fields: [categoryPath], references: [path])
    categoryPath    String
    attributeValues AttributeValue[]

    tier        AdTiers @default(Free)
    title       String
    description String? @db.Text
    images      Image[]
    price       Float
    negotiable  Boolean

    city   City @relation(fields: [cityId], references: [id])
    cityId Int

    governorate   Governorate @relation(fields: [governorateId], references: [id])
    governorateId Int

    adStatus    AD_STATUS @default(PENDING)
    rejectedFor String?

    deletedAt DateTime?

    analytics     AdAnalytics @relation(fields: [adAnalyticsId], references: [id])
    adAnalyticsId String
}

model AdTokenStore {
    id     String @id @default(cuid())
    userId String
    user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

    tokenType       AdTiers
    initialCount    Int
    count           Int
    nextRefreshTime DateTime
    refreshInDays   Int

    @@unique([userId, tokenType])
}

model AdAnalytics {
    id String @id @default(cuid())
    Ad Ad[]

    views       Int
    uniqueViews Int
}
